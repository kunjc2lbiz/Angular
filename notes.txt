1. ngFor directive iterates over a collection of data like an array, list, etc. and creates an HTML element for each of the items from the HTML template
2. It is used to repeat a portion of HTML template once per each item for an iterable list.
3. It is a structural directive. It manipulates DOM by adding/removing elements from DOM.



1. ngIf is a structural directive that is used to completely add or remove DOM element from the webpage based on a given condition


1. ngStyle is a attribute directive which allows us to set many inline style of an HTML element using expression
2. ngStyle helps us to display css dynamcially using expression


1. ngClass is an attribute directive, which allows us to add or remove CSS CLASSES (not css) to or from an HTML element dynamcially, based on some TypeScript expression.
2. It changes look or behaviour of an element and does not add/remove from DOM




1. To COMMUNICATE(not pass data) from parent to child component, we use CUSTOM PRPERTY BINDING &
   @Input() Decorator 
2. In parent component we use CUSTOM PRPERTY BINDING to pass data to child and we use @Input() in child component to get data from parent.



1. To COMMUNICATE(not pass data) to parent from child component, we use CUSTOM EVENT BINDING &
   @Output() Decorator 
2. In parent component we use CUSTOM EVENT BINDING to pass data to child and we use @Output() in child component to get data from parent.

NOTE: we can't use 2 structural directives in 1 tag. e.g: ngFor and ngIf can't be used in 1 tag.
<app-product [product]="prod" *ngIf="" *ngFor=""> </app-product>



1. To pass data between 2 non-related components (or you can say siblings), from one child pass data to parent using @Output() and take data from parent to second child using @Input()